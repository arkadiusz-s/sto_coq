Theorem 6 is the meat, but you need prior definitions and lemmas to understand it.

Definition 1 (Committed trace): A committed trace t' of a trace t is the trace that is obtained by filtering out all operations belonging to transactions that do not have a serialization point in t.

Lemma 2: If t is a valid sto trace, then its serialized trace t' is a valid sto trace.
This is a direct result of Definition 2. 

Definition 3 (Serialized trace):  A serialized trace t' of a trace t is t's committed trace reordered by grouping together actions of the same transaction in the order of the serialization points.

Lemma 4: A serialized trace t' of t is serial.
This is a direct result of Definition 5.

(* Omitted definition: sto_trace, read-write synchronization, write-write synchronization. 
Important: read and write synchronization lists are obtained from committed traces.
*)

Definition 5 (Trace equivalence): Two traces t and t' are equivalent if read-write synchronization and write-write synchronization are satisfied. 

Theorem 6 (Serializability): For all sto trace t, the serialized trace t' of t is equivalent to t.
Proof:
  Base case: empty trace []
  Inductive hypothesis: sto trace t is equivalent to its serialized trace t'.
  Now we prove that for all action *a* of transaction *tid*, if (tid, a)::t = t1 is a sto trace, then its serialized trace t1' is equivalent to it.
  Consider the action type of a.
  (1) If a is not a serialization action, then the committed traces of t and t1 are the same. So, the read and write synchronization lists of t1 are the same as those of t. By Definition 3, t1' = t', so the read and write synchronization lists of t1' are the same as those of t'. Since t is equivalent to t', the read and write synchronization lists of t and t' are both the same. This implies that the read and write synchronization lists of t1 and t1' are also the same. Therefore, they are equivalent by Definition 5.
  (2) If a is a serialization action, by Definition 3, t1' contains read and write actions belonging to transaction tid that are not present in t', and these read and write actions occur in the same order as they do in t1. This implies the new entries (those generated by actions of transaction tid) in the synchronization lists of t1 and t1' are the same. Since the synchronization lists of t and t' are the same (a result of t1 being equivalent to t1'), by construction (or definition) of synchronization lists, we know that the synchronization lists of t1 and t1' are the same. Therefore, t1 is equivalent to t1'.
Qed.

Corollary 7 (General Serilizability): For all sto trace t, there exists a serial sto trace t' that is equivalent to t.
Proof.
  Let t' be the serialized trace of t.
  We know that t' is equivalent to t by Theorem 6.
  By Lemma 2, t' is a sto trace.
  By Lemma 4, t' is a serial trace.
Qed.